@model IEnumerable<EventManagement.Models.Event>

@{
    ViewData["Title"] = "Browse Events";
    var categories = ViewData["Categories"] as List<string>;
}

<div class="container my-5">
    <!-- Header -->
    <div class="text-center mb-5">
        <h1 class="display-4 fw-bold text-primary">Upcoming Events</h1>
        <p class="lead text-muted">Discover and join events hosted by our community</p>
    </div>

    <!-- Search & Filters -->
    <div class="row mb-5 align-items-center justify-content-center g-3">
        <!-- Search Bar -->
        <div class="col-lg-6 col-md-12">
            <form asp-action="Index" method="get">
                <div class="input-group shadow-sm">
                    <input type="text" name="searchString"
                           value="@ViewData["CurrentFilter"]"
                           placeholder="Search events..."
                           class="form-control border-end-0 px-3 py-2" />
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>
        </div>

        <!-- Sort Dropdown -->
        <div class="col-lg-3 col-md-6">
            <form asp-action="Index" method="get" id="sortForm">
                <select name="sortOrder" class="form-select shadow-sm py-2" onchange="this.form.submit()">
                    <option value="">Sort by Name</option>
                    <option value="Date">Sort by Date</option>
                </select>
            </form>
        </div>

        <!-- Category Dropdown -->
        <div class="col-lg-3 col-md-6">
            <div class="dropdown w-100">
                <button class="btn btn-outline-primary w-100 dropdown-toggle shadow-sm py-2"
                        type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    Filter by Category
                </button>
                <ul class="dropdown-menu shadow-sm w-100" aria-labelledby="categoryDropdown">
                    <li><a class="dropdown-item" asp-action="Index">All</a></li>
                    @if (categories != null)
                    {
                        @foreach (var cat in categories)
                        {
                            <li><a class="dropdown-item" asp-action="Index" asp-route-category="@cat">@cat</a></li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>

    <!-- Event Cards Grid -->
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var ev in Model)
        {
            <div class="col">
                <a asp-action="Details" asp-route-id="@ev.EventId" class="text-decoration-none text-dark">
                    <div class="card h-100 shadow-sm border-0 rounded-3 event-card hover-scale">
                        <div class="card-body p-4">
                            <h5 class="card-title fw-bold text-primary">@ev.Title</h5>
                            <p class="card-text mb-2">
                                <i class="far fa-calendar-alt me-2"></i>
                                @ev.EventDateTime.ToString("dddd, dd MMM yyyy • h:mm tt")
                            </p>
                            <p class="fw-semibold text-success mb-0">
                                <i class="fas fa-ticket-alt me-2"></i>@ev.Fees$
                            </p>
                        </div>
                        <div class="card-footer bg-light border-0 d-flex justify-content-between small text-muted px-4 py-3">
                            <span>
                                <i class="fas fa-users me-1"></i>
                                @(ev.Registrations?.Count() ?? 0) / @ev.MaxParticipants Spots
                            </span>
                            <span class="fw-semibold text-primary">View Details →</span>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Hover effect for cards
        document.addEventListener("DOMContentLoaded", function () {
            const cards = document.querySelectorAll(".hover-scale");
            cards.forEach(card => {
                card.addEventListener("mouseover", () => card.classList.add("shadow-lg"));
                card.addEventListener("mouseleave", () => card.classList.remove("shadow-lg"));
            });
        });
    </script>
}

<style>
    .hover-scale {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s;
    }

        .hover-scale:hover {
            transform: translateY(-5px);
        }
</style>
